{
  "swagger": "2.0",
  "info": {
    "description": "The Robots API",
    "version": "0.0.1",
    "title": "Robots Microservice",
    "termsOfService": "",
    "contact": {
      "email": "js798p@att.com"
    },
    "license": {
      "name": "UNLICENSED",
      "url": "http://att.com"
    }
  },
  "host": "localhost:9000",
  "basePath": "/api",
  "schemes": ["http"],
  "paths": {
    "/v1/robots": {
      "options": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "description":
                  "The HTTP methods that are allowed for this path",
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Returns an array of all the robots",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Robot"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new robot",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Robot object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Robot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Robot"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/robots/{_id}": {
      "options": {
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of a robot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "description":
                  "The HTTP methods that are allowed for this path",
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Find robot by ID",
        "description": "Returns a single robot",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of robot to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Robot"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Robot not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing robot",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "Robot id to delete",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Robot object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Robot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Robot not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a robot",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "The _id of the Robot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Robot not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Robot": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "_id": {
          "description": "The object ID",
          "example": "507f191e810c19729de860ea",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the robot",
          "example": "My Robot"
        },
        "secret": {
          "type": "string",
          "description": "The robot's secret. (auto-generated on creation)",
          "example": "fUvXeD4bk245MOvpqWt4riSZFRw3QPblzKKDWZVLvc",
          "readOnly": true
        },
        "createdAt": {
          "example": "2018-04-14T18:41:13.586Z",
          "readOnly": true
        },
        "updatedAt": {
          "example": "2018-04-14T18:41:13.586Z",
          "readOnly": true
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "SWAGGER_RESPONSE_VALIDATION_FAILED"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "actual": {
                "type": "object"
              },
              "expected": {
                "type": "object",
                "properties": {
                  "schema": {
                    "type": "object"
                  }
                }
              },
              "where": {
                "type": "string",
                "example": "response"
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
